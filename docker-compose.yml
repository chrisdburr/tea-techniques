services:
  db:
    image: postgres:16
    environment:
      - POSTGRES_DB=techniques
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.docker
      - SECRET_KEY=dev-secret-key
      - DB_NAME=techniques
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=db
      - DB_PORT=5432
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - ./backend/data:/app/data
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health/"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        # Only build-time variables as ARGs
        - NEXT_PUBLIC_API_URL=/api
        - NEXT_PUBLIC_SWAGGER_URL=/swagger/
    environment:
      # Only runtime variables as ENV
      - PORT=3000
      - HOSTNAME=0.0.0.0
      - NODE_OPTIONS=--max-old-space-size=4096
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend/src:/app/src
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://0.0.0.0:3000"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

volumes:
  postgres_data:
