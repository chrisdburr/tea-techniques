{
  "tag": {
    "name": "explanatory-scope/local",
    "slug": "explanatory-scope-local",
    "count": 20,
    "category": "explanatory-scope"
  },
  "techniques": [
    {
      "slug": "shapley-additive-explanations",
      "name": "SHapley Additive exPlanations",
      "description": "SHAP explains model predictions by quantifying how much each input feature contributes to the outcome. It assigns an importance score to every feature, indicating whether it pushes the prediction towards or away from the average. The method systematically evaluates how predictions change as features are included or excluded, drawing on game theory concepts to ensure a fair distribution of contributions.",
      "assurance_goals": [
        "Explainability",
        "Fairness",
        "Reliability"
      ],
      "tags": [
        "applicable-models/agnostic",
        "assurance-goal-category/explainability",
        "assurance-goal-category/explainability/feature-analysis",
        "assurance-goal-category/explainability/feature-analysis/importance-and-attribution",
        "assurance-goal-category/fairness",
        "assurance-goal-category/reliability",
        "data-requirements/no-special-requirements",
        "data-type/any",
        "evidence-type/quantitative-metric",
        "expertise-needed/statistics",
        "explanatory-scope/global",
        "explanatory-scope/local",
        "lifecycle-stage/model-development",
        "technique-type/algorithmic"
      ],
      "example_use_cases": [
        {
          "description": "Analysing a customer churn prediction model to understand why a specific high-value customer was flagged as likely to leave, revealing that recent support ticket interactions and declining purchase frequency were the main drivers.",
          "goal": "Explainability"
        },
        {
          "description": "Auditing a loan approval model by comparing SHAP values for applicants from different demographic groups, ensuring that protected characteristics like race or gender do not have an undue influence on credit decisions.",
          "goal": "Fairness"
        },
        {
          "description": "Validating a medical diagnosis model by confirming that its predictions are based on relevant clinical features (e.g., blood pressure, cholesterol levels) rather than spurious correlations (e.g., patient ID or appointment time), thereby improving model reliability.",
          "goal": "Reliability"
        }
      ],
      "limitations": [
        {
          "description": "Assumes feature independence, which can produce misleading explanations when features are highly correlated, as the model may attribute importance to features that are merely proxies for others."
        },
        {
          "description": "Computationally expensive for models with many features or large datasets, as the number of required predictions grows exponentially with the number of features."
        },
        {
          "description": "The choice of background dataset for generating explanations can significantly influence the results, requiring careful selection to ensure a representative baseline."
        },
        {
          "description": "Global explanations derived from averaging local SHAP values may obscure important heterogeneous effects where features impact subgroups of the population differently."
        }
      ],
      "resources": [
        {
          "title": "shap/shap",
          "url": "https://github.com/shap/shap",
          "source_type": "software_package"
        },
        {
          "title": "Introduction to SHapley Additive exPlanations (SHAP) â€” XAI Tutorials",
          "url": "https://xai-tutorials.readthedocs.io/en/latest/_model_agnostic_xai/shap.html",
          "source_type": "tutorial"
        },
        {
          "title": "An empirical study of the effect of background data size on the stability of SHapley Additive exPlanations (SHAP) for deep learning models",
          "url": "http://arxiv.org/pdf/2204.11351v3",
          "source_type": "technical_paper",
          "authors": [
            "Han Yuan",
            "Mingxuan Liu",
            "Lican Kang",
            "Chenkui Miao",
            "Ying Wu"
          ],
          "publication_date": "2022-04-24"
        },
        {
          "title": "SHAP: Shapley Additive Explanations | Towards Data Science",
          "url": "https://towardsdatascience.com/shap-shapley-additive-explanations-5a2a271ed9c3/",
          "source_type": "tutorial"
        },
        {
          "title": "MAIF/shapash",
          "url": "https://github.com/MAIF/shapash",
          "source_type": "software_package"
        }
      ],
      "complexity_rating": 3,
      "computational_cost_rating": 4,
      "acronym": "SHAP",
      "related_techniques": [
        "integrated-gradients",
        "deeplift",
        "layer-wise-relevance-propagation",
        "local-interpretable-model-agnostic-explanations",
        "contrastive-explanation-method",
        "anchor"
      ]
    },
    {
      "slug": "integrated-gradients",
      "name": "Integrated Gradients",
      "description": "Integrated Gradients is an attribution technique that explains a model's prediction by quantifying the contribution of each input feature. It works by accumulating gradients along a straight path from a user-defined baseline input (e.g., a black image or an all-zero vector) to the actual input. This path integral ensures that the attributions satisfy fundamental axioms like completeness (attributions sum up to the difference between the prediction and the baseline prediction) and sensitivity (non-zero attributions for features that change the prediction). The output is a set of importance scores, often visualised as heatmaps, indicating which parts of the input were most influential for the model's decision.",
      "assurance_goals": [
        "Explainability"
      ],
      "tags": [
        "applicable-models/neural-network",
        "assurance-goal-category/explainability",
        "data-requirements/labelled-data",
        "data-requirements/reference-dataset",
        "data-type/any",
        "evidence-type/quantitative-metric",
        "evidence-type/visualization",
        "expertise-needed/ml-engineering",
        "expertise-needed/statistics",
        "explanatory-scope/local",
        "lifecycle-stage/model-development",
        "technique-type/algorithmic"
      ],
      "example_use_cases": [
        {
          "description": "Analysing a medical image classification model to understand which specific pixels or regions in an X-ray image contribute most to a diagnosis of pneumonia, ensuring the model focuses on relevant pathological features rather than artifacts.",
          "goal": "Explainability"
        },
        {
          "description": "Explaining the sentiment prediction of a natural language processing model by highlighting which words or phrases in a review most strongly influenced its classification as positive or negative, revealing the model's interpretative focus.",
          "goal": "Explainability"
        }
      ],
      "limitations": [
        {
          "description": "Requires a carefully chosen and meaningful baseline input; an inappropriate baseline can lead to misleading or uninformative attributions."
        },
        {
          "description": "The model must be differentiable, which limits its direct application to models with non-differentiable components or discrete inputs without workarounds."
        },
        {
          "description": "Computationally more expensive than simple gradient-based methods, as it requires multiple gradient calculations along the integration path."
        },
        {
          "description": "While satisfying completeness, the attributions can sometimes be visually noisy or difficult for humans to interpret intuitively, especially for complex inputs."
        }
      ],
      "resources": [
        {
          "title": "ankurtaly/Integrated-Gradients",
          "url": "https://github.com/ankurtaly/Integrated-Gradients",
          "source_type": "software_package"
        },
        {
          "title": "pytorch/captum",
          "url": "https://github.com/pytorch/captum",
          "source_type": "software_package"
        },
        {
          "title": "Maximum Entropy Baseline for Integrated Gradients",
          "url": "http://arxiv.org/pdf/2204.05948v1",
          "source_type": "technical_paper",
          "authors": [
            "Hanxiao Tan"
          ],
          "publication_date": "2022-04-12"
        },
        {
          "title": "Integrated Gradients from Scratch | Towards Data Science",
          "url": "https://towardsdatascience.com/integrated-gradients-from-scratch-b46311e4ab4/",
          "source_type": "tutorial"
        },
        {
          "title": "Understanding Integrated Gradients with SmoothTaylor for Deep Neural Network Attribution",
          "url": "http://arxiv.org/pdf/2004.10484v2",
          "source_type": "technical_paper",
          "authors": [
            "Gary S. W. Goh",
            "Sebastian Lapuschkin",
            "Leander Weber",
            "Wojciech Samek",
            "Alexander Binder"
          ],
          "publication_date": "2020-04-22"
        }
      ],
      "complexity_rating": 4,
      "computational_cost_rating": 3,
      "related_techniques": [
        "shapley-additive-explanations",
        "deeplift",
        "layer-wise-relevance-propagation",
        "local-interpretable-model-agnostic-explanations",
        "contrastive-explanation-method",
        "anchor"
      ]
    },
    {
      "slug": "deeplift",
      "name": "DeepLIFT",
      "description": "DeepLIFT (Deep Learning Important FeaTures) explains neural network predictions by decomposing the difference between the actual output and a reference output back to individual input features. It compares each neuron's activation to a reference activation (typically from a baseline input like all zeros or the dataset mean) and propagates these differences backwards through the network using chain rule modifications. Unlike gradient-based methods, DeepLIFT satisfies the sensitivity property (zero input gets zero attribution) and provides more stable attributions by using discrete differences rather than gradients.",
      "assurance_goals": [
        "Explainability",
        "Transparency"
      ],
      "tags": [
        "applicable-models/neural-network",
        "assurance-goal-category/explainability",
        "assurance-goal-category/transparency",
        "data-requirements/access-to-model-internals",
        "data-requirements/reference-dataset",
        "data-type/any",
        "evidence-type/quantitative-metric",
        "expertise-needed/ml-engineering",
        "explanatory-scope/local",
        "lifecycle-stage/model-development",
        "lifecycle-stage/system-deployment-and-use",
        "technique-type/algorithmic"
      ],
      "example_use_cases": [
        {
          "description": "Identifying which genomic sequences contribute to a neural network's prediction of protein binding sites, helping biologists understand regulatory mechanisms by comparing to neutral DNA baselines.",
          "goal": "Explainability"
        },
        {
          "description": "Debugging a deep learning image classifier that misclassifies medical scans by attributing the decision to specific image regions, revealing if the model focuses on irrelevant artifacts rather than pathological features.",
          "goal": "Explainability"
        },
        {
          "description": "Providing transparent explanations for automated loan approval decisions by showing which financial features (relative to typical applicant profiles) most influenced the neural network's recommendation.",
          "goal": "Transparency"
        }
      ],
      "limitations": [
        {
          "description": "Requires careful selection of reference baseline, as different choices can lead to substantially different attribution scores."
        },
        {
          "description": "Implementation complexity varies significantly across different neural network architectures and layer types."
        },
        {
          "description": "May produce unintuitive results when the chosen reference is not representative of the decision boundary."
        },
        {
          "description": "Limited to feedforward networks and specific layer types, not suitable for all modern architectures like transformers."
        }
      ],
      "resources": [
        {
          "title": "Learning Important Features Through Propagating Activation Differences",
          "url": "http://arxiv.org/pdf/1704.02685v2",
          "source_type": "technical_paper",
          "authors": [
            "Avanti Shrikumar",
            "Peyton Greenside",
            "Anshul Kundaje"
          ],
          "publication_date": "2017-04-10"
        },
        {
          "title": "pytorch/captum",
          "url": "https://github.com/pytorch/captum",
          "source_type": "software_package"
        },
        {
          "title": "Tutorial A3: DeepLIFT/SHAP â€” tangermeme v0.1.0 documentation",
          "url": "https://tangermeme.readthedocs.io/en/latest/tutorials/Tutorial_A3_Deep_LIFT_SHAP.html",
          "source_type": "tutorial"
        },
        {
          "title": "DeepLIFT Documentation - Captum",
          "url": "https://captum.ai/api/deep_lift.html",
          "source_type": "documentation"
        }
      ],
      "complexity_rating": 4,
      "computational_cost_rating": 3,
      "related_techniques": [
        "shapley-additive-explanations",
        "integrated-gradients",
        "layer-wise-relevance-propagation",
        "local-interpretable-model-agnostic-explanations",
        "contrastive-explanation-method",
        "anchor"
      ]
    },
    {
      "slug": "layer-wise-relevance-propagation",
      "name": "Layer-wise Relevance Propagation",
      "description": "Layer-wise Relevance Propagation (LRP) explains neural network predictions by working backwards through the network to show how much each input feature contributed to the final decision. It follows a simple conservation rule: the total contribution scores always add up to the original prediction. Starting from the output, LRP distributes 'relevance' backwards through each layer using different rules depending on the layer type. This creates a detailed breakdown showing which input features helped or hindered the prediction, making it easier to understand why the network made a particular decision.",
      "assurance_goals": [
        "Explainability",
        "Transparency"
      ],
      "tags": [
        "applicable-models/neural-network",
        "assurance-goal-category/explainability",
        "assurance-goal-category/transparency",
        "data-requirements/access-to-model-internals",
        "data-type/any",
        "evidence-type/quantitative-metric",
        "expertise-needed/ml-engineering",
        "explanatory-scope/local",
        "lifecycle-stage/model-development",
        "lifecycle-stage/system-deployment-and-use",
        "technique-type/algorithmic"
      ],
      "example_use_cases": [
        {
          "description": "Identifying which pixels in chest X-rays contribute to pneumonia detection, helping radiologists verify AI diagnoses by highlighting anatomical regions the model considers relevant.",
          "goal": "Explainability"
        },
        {
          "description": "Debugging a neural network's misclassification of handwritten digits by tracing relevance through layers to identify which input pixels caused the error and which network layers amplified it.",
          "goal": "Explainability"
        },
        {
          "description": "Providing transparent explanations for automated credit scoring decisions by showing which financial features received positive or negative relevance scores, enabling clear regulatory reporting.",
          "goal": "Transparency"
        }
      ],
      "limitations": [
        {
          "description": "Requires different propagation rules for each layer type, making implementation complex for new architectures."
        },
        {
          "description": "Can produce negative relevance scores which may be difficult to interpret intuitively."
        },
        {
          "description": "Rule selection (LRP-Îµ, LRP-Î³, etc.) significantly affects results and requires domain expertise."
        },
        {
          "description": "Limited to feedforward networks and may not work well with modern architectures like transformers without substantial modifications."
        }
      ],
      "resources": [
        {
          "title": "rachtibat/LRP-eXplains-Transformers",
          "url": "https://github.com/rachtibat/LRP-eXplains-Transformers",
          "source_type": "software_package"
        },
        {
          "title": "sebastian-lapuschkin/lrp_toolbox",
          "url": "https://github.com/sebastian-lapuschkin/lrp_toolbox",
          "source_type": "software_package"
        },
        {
          "title": "Getting started â€” zennit documentation",
          "url": "https://zennit.readthedocs.io/en/latest/getting-started.html",
          "source_type": "documentation"
        },
        {
          "title": "Layer-wise Relevance Propagation eXplains Transformers (LXT) documentation",
          "url": "https://lxt.readthedocs.io/",
          "source_type": "documentation"
        },
        {
          "title": "On Pixel-Wise Explanations for Non-Linear Classifier Decisions by Layer-Wise Relevance Propagation",
          "url": "https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0130140",
          "source_type": "technical_paper",
          "authors": [
            "Sebastian Bach",
            "Alexander Binder",
            "GrÃ©goire Montavon",
            "Frederick Klauschen",
            "Klaus-Robert MÃ¼ller",
            "Wojciech Samek"
          ],
          "publication_date": "2015-07-10"
        }
      ],
      "complexity_rating": 5,
      "computational_cost_rating": 3,
      "acronym": "LRP",
      "related_techniques": [
        "shapley-additive-explanations",
        "integrated-gradients",
        "deeplift",
        "local-interpretable-model-agnostic-explanations",
        "contrastive-explanation-method",
        "anchor"
      ]
    },
    {
      "slug": "contextual-decomposition",
      "name": "Contextual Decomposition",
      "description": "Contextual Decomposition explains LSTM and RNN predictions by decomposing the final hidden state into contributions from individual inputs and their interactions. Unlike simpler attribution methods, it separates the direct contribution of specific words or phrases from the contextual effects of surrounding words. This is particularly useful for understanding how sequential models process language, as it can identify whether a word's influence comes from its individual meaning or from its interaction with nearby words in the sequence.",
      "assurance_goals": [
        "Explainability",
        "Transparency"
      ],
      "tags": [
        "applicable-models/recurrent-neural-network",
        "assurance-goal-category/explainability",
        "assurance-goal-category/transparency",
        "data-requirements/no-special-requirements",
        "data-type/text",
        "evidence-type/quantitative-metric",
        "expertise-needed/ml-engineering",
        "explanatory-scope/local",
        "lifecycle-stage/model-development",
        "lifecycle-stage/system-deployment-and-use",
        "technique-type/algorithmic"
      ],
      "example_use_cases": [
        {
          "description": "Analysing why an LSTM-based spam filter flagged an email by decomposing contributions from individual words ('free', 'urgent') versus their contextual interactions ('free trial' together).",
          "goal": "Explainability"
        },
        {
          "description": "Understanding how a medical text classifier diagnoses conditions from clinical notes by separating direct symptom mentions from contextual medical reasoning patterns.",
          "goal": "Explainability"
        },
        {
          "description": "Providing transparent explanations for automated content moderation decisions by showing which words and phrase interactions contributed to toxicity detection.",
          "goal": "Transparency"
        }
      ],
      "limitations": [
        {
          "description": "Primarily designed for LSTM and simple RNN architectures, not suitable for modern transformers or attention-based models."
        },
        {
          "description": "Not widely implemented in standard machine learning libraries, often requiring custom implementation."
        },
        {
          "description": "Computational overhead increases significantly with sequence length and model depth."
        },
        {
          "description": "May not scale well to very complex models or capture all types of feature interactions in deep networks."
        }
      ],
      "resources": [
        {
          "title": "Beyond Word Importance: Contextual Decomposition to Extract Interactions from LSTMs",
          "url": "http://arxiv.org/pdf/1801.05453v2",
          "source_type": "technical_paper",
          "authors": [
            "W. James Murdoch",
            "Peter J. Liu",
            "Bin Yu"
          ],
          "publication_date": "2018-01-16"
        },
        {
          "title": "FredericGodin/ContextualDecomposition-NLP",
          "url": "https://github.com/FredericGodin/ContextualDecomposition-NLP",
          "source_type": "software_package"
        },
        {
          "title": "Interpreting patient-Specific risk prediction using contextual decomposition of BiLSTMs: Application to children with asthma",
          "url": "https://core.ac.uk/download/294758884.pdf",
          "source_type": "technical_paper",
          "authors": [
            "Alsaad R.",
            "Boughorbel S.",
            "Janahi I.",
            "Malluhi Q."
          ],
          "publication_date": "2019-01-01"
        },
        {
          "title": "Towards Hierarchical Importance Attribution: Explaining Compositional Semantics for Neural Sequence Models",
          "url": "http://arxiv.org/pdf/1911.06194v2",
          "source_type": "technical_paper",
          "authors": [
            "Xisen Jin",
            "Zhongyu Wei",
            "Junyi Du",
            "Xiangyang Xue",
            "Xiang Ren"
          ],
          "publication_date": "2019-11-08"
        },
        {
          "title": "Efficient Automated Circuit Discovery in Transformers using Contextual Decomposition",
          "url": "http://arxiv.org/pdf/2407.00886v3",
          "source_type": "technical_paper",
          "authors": [
            "Aliyah R. Hsu",
            "Georgia Zhou",
            "Yeshwanth Cherapanamjeri",
            "Yaxuan Huang",
            "Anobel Y. Odisho",
            "Peter R. Carroll",
            "Bin Yu"
          ],
          "publication_date": "2024-07-01"
        }
      ],
      "complexity_rating": 5,
      "computational_cost_rating": 3,
      "related_techniques": [
        "taylor-decomposition",
        "influence-functions"
      ]
    },
    {
      "slug": "taylor-decomposition",
      "name": "Taylor Decomposition",
      "description": "Taylor Decomposition is a mathematical technique that explains neural network predictions by computing first-order and higher-order derivatives of the network's output with respect to input features. It decomposes the prediction into relevance scores that indicate how much each input feature and feature interaction contributes to the final decision. The method uses Layer-wise Relevance Propagation (LRP) principles to trace prediction contributions backwards through the network layers, providing precise mathematical attributions for each input element.",
      "assurance_goals": [
        "Explainability"
      ],
      "tags": [
        "applicable-models/neural-network",
        "applicable-models/cnn",
        "assurance-goal-category/explainability",
        "data-requirements/access-to-model-internals",
        "data-type/any",
        "evidence-type/quantitative-metric",
        "expertise-needed/ml-engineering",
        "explanatory-scope/local",
        "lifecycle-stage/model-development",
        "technique-type/algorithmic"
      ],
      "example_use_cases": [
        {
          "description": "Analyzing which pixels in an image contribute most to a convolutional neural network's classification decision, showing both positive and negative relevance scores for different regions of the input image.",
          "goal": "Explainability"
        },
        {
          "description": "Understanding how different word embeddings in a sentiment analysis model contribute to the final sentiment score, revealing which terms drive positive vs negative predictions.",
          "goal": "Explainability"
        }
      ],
      "limitations": [
        {
          "description": "Mathematically complex requiring deep understanding of calculus and neural network architectures."
        },
        {
          "description": "Computationally intensive as it requires computing gradients and higher-order derivatives through the entire network."
        },
        {
          "description": "Approximations used in practice may introduce errors that affect attribution accuracy."
        },
        {
          "description": "Limited tooling availability compared to other explainability methods, with most implementations being research-focused rather than production-ready."
        }
      ],
      "resources": [
        {
          "title": "Explaining NonLinear Classification Decisions with Deep Taylor Decomposition",
          "url": "http://arxiv.org/pdf/1512.02479v1",
          "source_type": "technical_paper",
          "authors": [
            "GrÃ©goire Montavon",
            "Sebastian Bach",
            "Alexander Binder",
            "Wojciech Samek",
            "Klaus-Robert MÃ¼ller"
          ],
          "publication_date": "2015-12-08"
        },
        {
          "title": "A Rigorous Study Of The Deep Taylor Decomposition",
          "url": "http://arxiv.org/pdf/2211.08425v1",
          "source_type": "technical_paper",
          "authors": [
            "Leon Sixt",
            "Tim Landgraf"
          ],
          "publication_date": "2022-11-14"
        },
        {
          "title": "sebastian-lapuschkin/lrp_toolbox",
          "url": "https://github.com/sebastian-lapuschkin/lrp_toolbox",
          "source_type": "software_package"
        }
      ],
      "complexity_rating": 5,
      "computational_cost_rating": 4,
      "related_techniques": [
        "contextual-decomposition",
        "influence-functions"
      ]
    },
    {
      "slug": "local-interpretable-model-agnostic-explanations",
      "name": "Local Interpretable Model-Agnostic Explanations",
      "description": "LIME (Local Interpretable Model-agnostic Explanations) explains individual predictions by approximating the complex model's behaviour in a small neighbourhood around a specific instance. It works by creating perturbed versions of the input (e.g., removing words from text, changing pixel values in images, or varying feature values), obtaining the model's predictions for these variations, and training a simple interpretable model (typically linear regression) weighted by proximity to the original instance. The coefficients of this local surrogate model reveal which features most influenced the specific prediction.",
      "assurance_goals": [
        "Explainability",
        "Transparency"
      ],
      "tags": [
        "applicable-models/agnostic",
        "assurance-goal-category/explainability",
        "assurance-goal-category/transparency",
        "data-requirements/no-special-requirements",
        "data-type/any",
        "evidence-type/qualitative-report",
        "evidence-type/quantitative-metric",
        "expertise-needed/ml-engineering",
        "explanatory-scope/local",
        "lifecycle-stage/model-development",
        "lifecycle-stage/system-deployment-and-use",
        "technique-type/algorithmic"
      ],
      "example_use_cases": [
        {
          "description": "Explaining why a specific patient received a high-risk diagnosis by showing which symptoms (fever, blood pressure, age) contributed most to the prediction, helping doctors validate the AI's reasoning.",
          "goal": "Explainability"
        },
        {
          "description": "Debugging a text classifier's misclassification of a movie review by highlighting which words (e.g., sarcastic phrases) confused the model, enabling targeted model improvements.",
          "goal": "Explainability"
        },
        {
          "description": "Providing transparent explanations to customers about automated decisions in insurance claims, showing which claim features influenced approval or denial to meet regulatory requirements.",
          "goal": "Transparency"
        }
      ],
      "limitations": [
        {
          "description": "Explanations can be unstable due to random sampling, producing different results across multiple runs."
        },
        {
          "description": "The linear surrogate may poorly approximate highly non-linear model behaviour in the local region."
        },
        {
          "description": "Defining the neighbourhood size and perturbation strategy requires careful tuning for each data type."
        },
        {
          "description": "Can be computationally expensive for explaining many instances due to repeated model queries."
        }
      ],
      "resources": [
        {
          "title": "marcotcr/lime",
          "url": "https://github.com/marcotcr/lime",
          "source_type": "software_package"
        },
        {
          "title": "thomasp85/lime (R package)",
          "url": "https://github.com/thomasp85/lime",
          "source_type": "software_package"
        },
        {
          "title": "Local Interpretable Model-Agnostic Explanations (lime) â€” lime 0.1 ...",
          "url": "https://lime-ml.readthedocs.io/",
          "source_type": "documentation"
        },
        {
          "title": "'Why Should I Trust You?' Explaining the Predictions of Any Classifier",
          "url": "https://arxiv.org/abs/1602.04938",
          "source_type": "technical_paper",
          "authors": [
            "Marco Tulio Ribeiro",
            "Sameer Singh",
            "Carlos Guestrin"
          ],
          "publication_date": "2016-02-16"
        },
        {
          "title": "How to convince your boss to trust your ML/DL models - Towards Data Science",
          "url": "https://towardsdatascience.com/how-to-convince-your-boss-to-trust-your-ml-dl-models-671f707246a8",
          "source_type": "tutorial"
        },
        {
          "title": "Enhanced LIME â€” ADS 2.6.5 documentation",
          "url": "https://accelerated-data-science.readthedocs.io/en/v2.6.5/user_guide/model_explainability/lime.html",
          "source_type": "documentation"
        }
      ],
      "complexity_rating": 2,
      "computational_cost_rating": 3,
      "acronym": "LIME",
      "related_techniques": [
        "shapley-additive-explanations",
        "integrated-gradients",
        "deeplift",
        "layer-wise-relevance-propagation",
        "contrastive-explanation-method",
        "anchor"
      ]
    },
    {
      "slug": "individual-conditional-expectation-plots",
      "name": "Individual Conditional Expectation Plots",
      "description": "ICE plots display the predicted output for individual instances as a function of a feature, with all other features held fixed for each instance. Each line on an ICE plot represents one instance's prediction trajectory as the feature of interest changes, revealing whether different instances are affected differently by that feature.",
      "assurance_goals": [
        "Explainability"
      ],
      "tags": [
        "applicable-models/agnostic",
        "assurance-goal-category/explainability",
        "data-requirements/no-special-requirements",
        "data-type/any",
        "evidence-type/visualization",
        "expertise-needed/low",
        "explanatory-scope/local",
        "explanatory-scope/global",
        "lifecycle-stage/model-development",
        "technique-type/visualization"
      ],
      "example_use_cases": [
        {
          "description": "Examining how house price predictions vary with property age for individual properties, revealing that whilst most houses follow a declining price trend with age, historic properties (built before 1900) show different patterns due to heritage value.",
          "goal": "Explainability"
        },
        {
          "description": "Analysing how individual patients' diabetes risk predictions change with BMI, showing that whilst most patients follow the expected increasing risk pattern, some patients with specific genetic markers show different response curves.",
          "goal": "Explainability"
        }
      ],
      "limitations": [
        {
          "description": "Plots can become cluttered and difficult to interpret when displaying many instances simultaneously."
        },
        {
          "description": "Does not provide automatic summarisation of overall effects, requiring manual visual inspection to identify patterns."
        },
        {
          "description": "Still assumes all other features remain fixed at their observed values, which may not reflect realistic scenarios."
        },
        {
          "description": "Cannot reveal interactions between the plotted feature and other features for individual instances."
        }
      ],
      "resources": [
        {
          "title": "Peeking Inside the Black Box: Visualizing Statistical Learning with Plots of Individual Conditional Expectation",
          "url": "http://arxiv.org/pdf/1309.6392v2",
          "source_type": "technical_paper",
          "authors": [
            "Alex Goldstein",
            "Adam Kapelner",
            "Justin Bleich",
            "Emil Pitkin"
          ],
          "publication_date": "2013-09-25"
        },
        {
          "title": "Bringing a Ruler Into the Black Box: Uncovering Feature Impact from Individual Conditional Expectation Plots",
          "url": "http://arxiv.org/pdf/2109.02724v1",
          "source_type": "technical_paper",
          "authors": [
            "Andrew Yeh",
            "Anhthy Ngo"
          ],
          "publication_date": "2021-09-06"
        },
        {
          "title": "Explainable AI(XAI) - A guide to 7 packages in Python to explain ...",
          "url": "https://towardsdatascience.com/explainable-ai-xai-a-guide-to-7-packages-in-python-to-explain-your-models-932967f0634b/",
          "source_type": "tutorial"
        },
        {
          "title": "Communicating Uncertainty in Machine Learning Explanations: A Visualization Analytics Approach for Predictive Process Monitoring",
          "url": "https://www.semanticscholar.org/paper/3d0090df2b73369b502559eb49fd6d1ae432b952",
          "source_type": "technical_paper",
          "authors": [
            "Nijat Mehdiyev",
            "Maxim Majlatow",
            "Peter Fettke"
          ]
        }
      ],
      "complexity_rating": 2,
      "computational_cost_rating": 2,
      "acronym": "ICE",
      "related_techniques": [
        "partial-dependence-plots"
      ]
    },
    {
      "slug": "saliency-maps",
      "name": "Saliency Maps",
      "description": "Saliency maps are visual explanations for image classification models that highlight which pixels in an image most strongly influence the model's prediction. Computed by calculating gradients of the model's output with respect to input pixels, saliency maps produce heatmaps where brighter regions indicate pixels that, when changed, would most significantly affect the prediction. This technique helps users understand which parts of an image the model is 'looking at' when making decisions.",
      "assurance_goals": [
        "Explainability",
        "Fairness"
      ],
      "tags": [
        "applicable-models/neural-network",
        "assurance-goal-category/explainability",
        "assurance-goal-category/fairness",
        "data-requirements/access-to-model-internals",
        "data-type/image",
        "evidence-type/visualization",
        "expertise-needed/ml-engineering",
        "explanatory-scope/local",
        "lifecycle-stage/model-development",
        "technique-type/algorithmic"
      ],
      "example_use_cases": [
        {
          "description": "Analysing X-ray images in a pneumonia detection model to verify that the algorithm focuses on lung regions showing inflammatory patterns rather than irrelevant areas like medical equipment or patient positioning markers.",
          "goal": "Explainability"
        },
        {
          "description": "Examining skin lesion classification models to ensure the algorithm identifies diagnostic features (irregular borders, colour variation) rather than artifacts like rulers, hair, or skin markings that shouldn't influence medical decisions.",
          "goal": "Explainability"
        },
        {
          "description": "Auditing a dermatology AI system to verify it focuses on medical symptoms rather than skin colour when diagnosing conditions, ensuring equitable treatment across racial groups by revealing inappropriate attention to demographic features.",
          "goal": "Fairness"
        }
      ],
      "limitations": [
        {
          "description": "Saliency maps are often noisy and can change dramatically with small input perturbations, making them unstable."
        },
        {
          "description": "Highlighted regions may not correspond to semantically meaningful or human-understandable features."
        },
        {
          "description": "Only indicates local gradient information, not causal importance or actual decision-making logic."
        },
        {
          "description": "May highlight irrelevant pixels that happen to have high gradients due to model artifacts rather than meaningful patterns."
        }
      ],
      "resources": [
        {
          "title": "utkuozbulak/pytorch-cnn-visualizations",
          "url": "https://github.com/utkuozbulak/pytorch-cnn-visualizations",
          "source_type": "software_package"
        },
        {
          "title": "Concepts of Saliency and Explainability in AI",
          "url": "https://xaitk-saliency.readthedocs.io/en/latest/xaitk_explanation.html",
          "source_type": "documentation"
        },
        {
          "title": "Occlusion Saliency Example",
          "url": "https://xaitk-saliency.readthedocs.io/en/latest/examples/OcclusionSaliency.html",
          "source_type": "tutorial"
        }
      ],
      "complexity_rating": 3,
      "computational_cost_rating": 2,
      "related_techniques": [
        "gradient-weighted-class-activation-mapping",
        "occlusion-sensitivity"
      ]
    },
    {
      "slug": "gradient-weighted-class-activation-mapping",
      "name": "Gradient-weighted Class Activation Mapping",
      "description": "Grad-CAM creates visual heatmaps showing which regions of an image a convolutional neural network focuses on when making a specific classification. Unlike pixel-level techniques, Grad-CAM produces coarser region-based explanations by using gradients from the predicted class to weight the CNN's final feature maps, then projecting these weighted activations back to create an overlay on the original image. This provides intuitive visual explanations of where the model is 'looking' for evidence of different classes.",
      "assurance_goals": [
        "Explainability",
        "Fairness"
      ],
      "tags": [
        "applicable-models/cnn",
        "assurance-goal-category/explainability",
        "assurance-goal-category/fairness",
        "data-requirements/access-to-model-internals",
        "data-type/image",
        "evidence-type/visualization",
        "expertise-needed/ml-engineering",
        "explanatory-scope/local",
        "lifecycle-stage/model-development",
        "technique-type/algorithmic"
      ],
      "example_use_cases": [
        {
          "description": "Validating that a melanoma detection model focuses on the actual skin lesion rather than surrounding healthy skin, medical equipment, or artifacts when making cancer/benign classifications.",
          "goal": "Explainability"
        },
        {
          "description": "Debugging an autonomous vehicle's traffic sign recognition system by visualising whether the model correctly focuses on the sign itself rather than background objects, shadows, or irrelevant visual elements.",
          "goal": "Explainability"
        },
        {
          "description": "Auditing a medical imaging system for racial bias by examining whether diagnostic predictions inappropriately focus on skin tone regions rather than actual pathological features, ensuring equitable healthcare AI deployment.",
          "goal": "Fairness"
        }
      ],
      "limitations": [
        {
          "description": "Requires access to the CNN's internal feature maps and gradients, limiting use to white-box scenarios."
        },
        {
          "description": "Resolution is constrained by the final convolutional layer's feature map size, producing coarser localisation than pixel-level methods."
        },
        {
          "description": "Only applicable to CNN architectures with clearly defined convolutional layers, not suitable for other neural network types."
        },
        {
          "description": "May highlight regions that correlate with the class but aren't causally important for the model's decision-making process."
        }
      ],
      "resources": [
        {
          "title": "jacobgil/pytorch-grad-cam",
          "url": "https://github.com/jacobgil/pytorch-grad-cam",
          "source_type": "software_package"
        },
        {
          "title": "Grad-CAM: Visualize class activation maps with Keras, TensorFlow ...",
          "url": "https://pyimagesearch.com/2020/03/09/grad-cam-visualize-class-activation-maps-with-keras-tensorflow-and-deep-learning/",
          "source_type": "tutorial"
        },
        {
          "title": "kazuto1011/grad-cam-pytorch",
          "url": "https://github.com/kazuto1011/grad-cam-pytorch",
          "source_type": "software_package"
        },
        {
          "title": "A Tutorial on Explainable Image Classification for Dementia Stages Using Convolutional Neural Network and Gradient-weighted Class Activation Mapping",
          "url": "https://www.semanticscholar.org/paper/8b1139cb06cfe5ba69e2fd05e1450b43df031a02",
          "source_type": "documentation",
          "authors": [
            "Kevin Kam Fung Yuen"
          ]
        },
        {
          "title": "A Guide to Grad-CAM in Deep Learning - Analytics Vidhya",
          "url": "https://www.analyticsvidhya.com/blog/2023/12/grad-cam-in-deep-learning/",
          "source_type": "tutorial"
        }
      ],
      "complexity_rating": 3,
      "computational_cost_rating": 2,
      "acronym": "Grad-CAM",
      "related_techniques": [
        "saliency-maps",
        "occlusion-sensitivity"
      ]
    },
    {
      "slug": "occlusion-sensitivity",
      "name": "Occlusion Sensitivity",
      "description": "Occlusion sensitivity tests which parts of the input are important by occluding (masking or removing) them and seeing how the model's prediction changes. For example, portions of an image can be covered up in a sliding window fashion; if the model's confidence drops significantly when a certain region is occluded, that region was important for the prediction.",
      "assurance_goals": [
        "Explainability"
      ],
      "tags": [
        "applicable-models/agnostic",
        "assurance-goal-category/explainability",
        "data-requirements/no-special-requirements",
        "data-type/image",
        "evidence-type/quantitative-metric",
        "expertise-needed/ml-engineering",
        "explanatory-scope/local",
        "lifecycle-stage/model-development",
        "technique-type/algorithmic"
      ],
      "example_use_cases": [
        {
          "description": "Testing which regions of a chest X-ray are critical for pneumonia detection by systematically covering different areas with grey patches and measuring how much the model's confidence drops for each occluded region.",
          "goal": "Explainability"
        },
        {
          "description": "Evaluating whether a facial recognition system relies on specific facial features by masking eyes, nose, mouth, or other regions to identify which areas cause the biggest drop in recognition accuracy.",
          "goal": "Explainability"
        }
      ],
      "limitations": [
        {
          "description": "Computationally expensive as it requires running inference multiple times for each region tested, scaling poorly with input size."
        },
        {
          "description": "Choice of occlusion size and shape can significantly bias results - too small may miss important features, too large may occlude multiple relevant regions simultaneously."
        },
        {
          "description": "Cannot capture interactions between multiple regions that jointly contribute to the prediction but are individually less important."
        },
        {
          "description": "Results may be misleading if the model adapts to occlusion patterns or if occluded regions are filled with unrealistic pixel values."
        }
      ],
      "resources": [
        {
          "title": "kazuto1011/grad-cam-pytorch",
          "url": "https://github.com/kazuto1011/grad-cam-pytorch",
          "source_type": "software_package"
        },
        {
          "title": "Occlusion Sensitivity Analysis with Augmentation Subspace Perturbation in Deep Feature Space",
          "url": "http://arxiv.org/pdf/2311.15022v1",
          "source_type": "technical_paper",
          "authors": [
            "Pedro Valois",
            "Koichiro Niinuma",
            "Kazuhiro Fukui"
          ],
          "publication_date": "2023-11-25"
        },
        {
          "title": "Occlusion Sensitivity â€” tf-explain documentation",
          "url": "https://tf-explain.readthedocs.io/en/latest/methods.html#occlusion-sensitivity",
          "source_type": "documentation"
        },
        {
          "title": "Adaptive occlusion sensitivity analysis for visually explaining video recognition networks",
          "url": "http://arxiv.org/pdf/2207.12859v2",
          "source_type": "technical_paper",
          "authors": [
            "Tomoki Uchiyama",
            "Naoya Sogi",
            "Satoshi Iizuka",
            "Koichiro Niinuma",
            "Kazuhiro Fukui"
          ],
          "publication_date": "2022-07-26"
        },
        {
          "title": "sicara/tf-explain",
          "url": "https://github.com/sicara/tf-explain",
          "source_type": "software_package"
        }
      ],
      "complexity_rating": 2,
      "computational_cost_rating": 4,
      "related_techniques": [
        "saliency-maps",
        "gradient-weighted-class-activation-mapping"
      ]
    },
    {
      "slug": "classical-attention-analysis-in-neural-networks",
      "name": "Classical Attention Analysis in Neural Networks",
      "description": "Classical attention mechanisms in RNNs and CNNs create alignment matrices and temporal attention patterns that show how models focus on different input elements over time or space. This technique analyses these traditional attention patterns, particularly in encoder-decoder architectures and sequence-to-sequence models, where attention weights reveal which source elements influence each output step. Unlike transformer self-attention analysis, this focuses on understanding alignment patterns, temporal dependencies, and encoder-decoder attention dynamics in classical neural architectures.",
      "assurance_goals": [
        "Explainability"
      ],
      "tags": [
        "applicable-models/rnn",
        "applicable-models/cnn",
        "assurance-goal-category/explainability",
        "data-requirements/access-to-model-internals",
        "data-type/any",
        "evidence-type/visualization",
        "expertise-needed/ml-engineering",
        "explanatory-scope/local",
        "lifecycle-stage/model-development",
        "technique-type/algorithmic"
      ],
      "example_use_cases": [
        {
          "description": "Analysing encoder-decoder attention in a neural machine translation model to verify the alignment between source and target words, ensuring the model learns proper translation correspondences rather than positional biases.",
          "goal": "Explainability"
        },
        {
          "description": "Examining temporal attention patterns in an RNN-based image captioning model to understand how attention moves across different image regions as it generates each word of the caption description.",
          "goal": "Explainability"
        }
      ],
      "limitations": [
        {
          "description": "Attention weights are not always strongly correlated with feature importance for the final prediction."
        },
        {
          "description": "High attention does not necessarily imply causal influence - models can attend to irrelevant but correlated features."
        },
        {
          "description": "Only applicable to neural network architectures that explicitly use attention mechanisms."
        },
        {
          "description": "Interpretation can be misleading without understanding the specific attention mechanism implementation and training dynamics."
        }
      ],
      "resources": [
        {
          "title": "An Attentive Survey of Attention Models",
          "url": "https://www.semanticscholar.org/paper/a8427ce5aee6d62800c725588e89940ed4910e0d",
          "source_type": "documentation",
          "authors": [
            "S. Chaudhari",
            "Gungor Polatkan",
            "R. Ramanath",
            "Varun Mithal"
          ]
        },
        {
          "title": "Attention, please! A survey of neural attention models in deep learning",
          "url": "https://www.semanticscholar.org/paper/44930df2a3186edb58c4d6f6e5ed828c5d6a0089",
          "source_type": "documentation",
          "authors": [
            "Alana de Santana Correia",
            "E. Colombini"
          ]
        },
        {
          "title": "ecco - Explain, Analyze, and Visualize NLP Language Models",
          "url": "https://github.com/jalammar/ecco",
          "source_type": "software_package"
        },
        {
          "title": "Enhancing Sentiment Analysis of Twitter Data Using Recurrent Neural Networks with Attention Mechanism",
          "url": "https://www.semanticscholar.org/paper/c59e0158280a567114ae8ca64a932eefd127e0aa",
          "source_type": "technical_paper",
          "authors": [
            "S. Nithya",
            "X. A. Presskila",
            "B. Sakthivel",
            "R. Krishnan",
            "K. Narayanan",
            "S. Sundararajan"
          ]
        },
        {
          "title": "Can Neural Networks Develop Attention? Google Thinks they Can ...",
          "url": "https://www.kdnuggets.com/2019/11/neural-networks-develop-attention-google.html",
          "source_type": "tutorial"
        }
      ],
      "complexity_rating": 2,
      "computational_cost_rating": 1,
      "related_techniques": [
        "attention-visualisation-in-transformers"
      ]
    },
    {
      "slug": "influence-functions",
      "name": "Influence Functions",
      "description": "Influence functions quantify how much each training example influenced a model's predictions by computing the change in prediction that would occur if that training example were removed and the model retrained. Using calculus and the implicit function theorem, they approximate this 'leave-one-out' effect without actually retraining the model by computing gradients and Hessian information. This mathematical approach reveals which specific training examples were most responsible for pushing the model toward or away from particular predictions, enabling practitioners to trace problematic outputs back to their root causes in the training data.",
      "assurance_goals": [
        "Explainability",
        "Fairness",
        "Privacy"
      ],
      "tags": [
        "applicable-models/agnostic",
        "assurance-goal-category/explainability",
        "assurance-goal-category/fairness",
        "assurance-goal-category/privacy",
        "data-requirements/access-to-training-data",
        "data-type/any",
        "evidence-type/quantitative-metric",
        "expertise-needed/ml-engineering",
        "explanatory-scope/local",
        "lifecycle-stage/model-development",
        "technique-type/algorithmic"
      ],
      "example_use_cases": [
        {
          "description": "Investigating why a medical diagnosis model misclassified a patient by identifying which specific training cases most influenced the incorrect prediction, revealing potential mislabelled examples or problematic patterns in the training data.",
          "goal": "Explainability"
        },
        {
          "description": "Analysing a spam detection system that falsely flagged legitimate emails by tracing the prediction back to influential training examples, discovering that certain training emails contained misleading patterns that caused the model to overfit.",
          "goal": "Explainability"
        },
        {
          "description": "Auditing a loan approval model for discriminatory patterns by identifying which training examples most influenced rejections of minority applicants, revealing whether biased historical decisions are driving current unfair outcomes.",
          "goal": "Fairness"
        },
        {
          "description": "Assessing membership inference risks in a medical model by identifying whether certain patient records have disproportionate influence on predictions, indicating potential data leakage vulnerabilities.",
          "goal": "Privacy"
        }
      ],
      "limitations": [
        {
          "description": "Computationally intensive, requiring Hessian matrix computations that become intractable for very large models with millions of parameters."
        },
        {
          "description": "Requires access to the complete training dataset and training process, making it impossible to apply to pre-trained models without access to original training data."
        },
        {
          "description": "Accuracy degrades for highly non-convex models where the linear approximation underlying influence functions breaks down."
        },
        {
          "description": "Results can be sensitive to hyperparameter choices and may not generalise well across different model architectures or training procedures."
        }
      ],
      "resources": [
        {
          "title": "Understanding Black-box Predictions via Influence Functions",
          "url": "https://www.semanticscholar.org/paper/08ad8fad21f6ec4cda4d56be1ca5e146b7c913a1",
          "source_type": "technical_paper",
          "authors": [
            "Pang Wei Koh",
            "Percy Liang"
          ]
        },
        {
          "title": "nimarb/pytorch_influence_functions",
          "url": "https://github.com/nimarb/pytorch_influence_functions",
          "source_type": "software_package"
        },
        {
          "title": "What is Your Data Worth to GPT? LLM-Scale Data Valuation with Influence Functions",
          "url": "https://www.semanticscholar.org/paper/f33f3dece9f34c1ec5417dccf9e0acf592d8e8cb",
          "source_type": "technical_paper",
          "authors": [
            "Sang Keun Choe",
            "Hwijeen Ahn",
            "Juhan Bae",
            "Kewen Zhao",
            "Minsoo Kang",
            "Youngseog Chung",
            "Adithya Pratapa",
            "W. Neiswanger",
            "Emma Strubell",
            "Teruko Mitamura",
            "Jeff G. Schneider",
            "Eduard H. Hovy",
            "Roger B. Grosse",
            "Eric P. Xing"
          ]
        },
        {
          "title": "Scaling Up Influence Functions",
          "url": "https://www.semanticscholar.org/paper/ef2a773c3c7848a6cc16b18164be5f8876a310af",
          "source_type": "technical_paper",
          "authors": [
            "Andrea Schioppa",
            "Polina Zablotskaia",
            "David Vilar",
            "Artem Sokolov"
          ]
        },
        {
          "title": "Welcome to torch-influence's API Reference! â€” torch-influence 0.1.0 ...",
          "url": "https://torch-influence.readthedocs.io/",
          "source_type": "documentation"
        }
      ],
      "complexity_rating": 5,
      "computational_cost_rating": 5,
      "related_techniques": [
        "contextual-decomposition",
        "taylor-decomposition"
      ]
    },
    {
      "slug": "contrastive-explanation-method",
      "name": "Contrastive Explanation Method",
      "description": "The Contrastive Explanation Method (CEM) explains model decisions by generating contrastive examples that reveal what makes a prediction distinctive. It identifies 'pertinent negatives' (minimal features that could be removed to change the prediction) and 'pertinent positives' (minimal features that must be present to maintain the prediction). This approach helps users understand not just what led to a decision, but what would need to change to achieve a different outcome, providing actionable insights for decision-making.",
      "assurance_goals": [
        "Explainability",
        "Transparency"
      ],
      "tags": [
        "applicable-models/agnostic",
        "assurance-goal-category/explainability",
        "assurance-goal-category/transparency",
        "data-requirements/no-special-requirements",
        "data-type/any",
        "evidence-type/quantitative-metric",
        "expertise-needed/ml-engineering",
        "explanatory-scope/local",
        "lifecycle-stage/model-development",
        "technique-type/algorithmic"
      ],
      "example_use_cases": [
        {
          "description": "Explaining loan application rejections by showing that removing recent late payments (pertinent negative) or adding Â£5,000 more annual income (pertinent positive) would change the decision to approval, giving applicants clear actionable guidance.",
          "goal": "Explainability"
        },
        {
          "description": "Analysing medical diagnosis models by identifying that removing a specific symptom combination would change a high-risk classification to low-risk, helping clinicians understand the critical diagnostic factors.",
          "goal": "Explainability"
        },
        {
          "description": "Providing transparent hiring decisions by showing job candidates exactly which qualifications (pertinent positives) they need to acquire or which application elements (pertinent negatives) might be hindering their success.",
          "goal": "Transparency"
        }
      ],
      "limitations": [
        {
          "description": "Computationally expensive as it requires solving an optimisation problem for each individual instance to find minimal perturbations."
        },
        {
          "description": "Results can be highly sensitive to hyperparameter settings, requiring careful tuning to produce meaningful explanations."
        },
        {
          "description": "May generate unrealistic or impossible contrastive examples if constraints are not properly specified, leading to impractical recommendations."
        },
        {
          "description": "Limited to scenarios where feature perturbations are meaningful and actionable, making it less suitable for immutable characteristics or highly constrained domains."
        }
      ],
      "resources": [
        {
          "title": "Explanations based on the Missing: Towards Contrastive Explanations with Pertinent Negatives",
          "url": "http://arxiv.org/pdf/1802.07623v2",
          "source_type": "technical_paper",
          "authors": [
            "Amit Dhurandhar",
            "Pin-Yu Chen",
            "Ronny Luss",
            "Chun-Chen Tu",
            "Paishun Ting",
            "Karthikeyan Shanmugam",
            "Payel Das"
          ],
          "publication_date": "2018-02-21"
        },
        {
          "title": "Interpretable Machine Learning",
          "url": "https://christophm.github.io/interpretable-ml-book/interpretability.html",
          "source_type": "documentation"
        },
        {
          "title": "Benchmarking and survey of explanation methods for black box models",
          "url": "https://core.ac.uk/download/599106733.pdf",
          "source_type": "documentation",
          "authors": [
            "Bodria Francesco",
            "Giannotti Fosca",
            "Guidotti R.",
            "Naretto Francesca",
            "Pedreschi Dino",
            "Rinzivillo S."
          ],
          "publication_date": "2023-01-01"
        }
      ],
      "complexity_rating": 5,
      "computational_cost_rating": 4,
      "acronym": "CEM",
      "related_techniques": [
        "shapley-additive-explanations",
        "integrated-gradients",
        "deeplift",
        "layer-wise-relevance-propagation",
        "local-interpretable-model-agnostic-explanations",
        "anchor"
      ]
    },
    {
      "slug": "anchor",
      "name": "ANCHOR",
      "description": "ANCHOR generates high-precision if-then rules that explain individual predictions by identifying the minimal set of feature conditions that guarantee a specific prediction with high confidence. It searches for 'anchor' conditions (e.g., 'age > 30 AND income < Â£50k') that ensure the model gives the same prediction at least 95% of the time when those conditions are met. This creates human-readable rules that users can trust as sufficient conditions for understanding why a particular decision was made.",
      "assurance_goals": [
        "Explainability",
        "Transparency"
      ],
      "tags": [
        "applicable-models/agnostic",
        "assurance-goal-category/explainability",
        "assurance-goal-category/transparency",
        "data-requirements/no-special-requirements",
        "data-type/any",
        "evidence-type/quantitative-metric",
        "expertise-needed/statistics",
        "explanatory-scope/local",
        "lifecycle-stage/model-development",
        "technique-type/algorithmic"
      ],
      "example_use_cases": [
        {
          "description": "Explaining loan application decisions with rules like 'IF credit_score > 650 AND debt_ratio < 0.4 THEN approval = 95% likely', giving applicants clear, actionable conditions they can understand and potentially improve.",
          "goal": "Explainability"
        },
        {
          "description": "Generating diagnostic rules for medical predictions such as 'IF fever > 38.5Â°C AND white_blood_cells > 12,000 THEN infection = 92% likely', helping clinicians validate automated diagnoses with trusted clinical indicators.",
          "goal": "Explainability"
        },
        {
          "description": "Creating transparent hiring decisions with rules like 'IF experience >= 3_years AND degree = relevant THEN hire = 89% likely', providing clear justification for recruitment decisions that can be audited for fairness.",
          "goal": "Transparency"
        }
      ],
      "limitations": [
        {
          "description": "Limited to local explanations for individual instances, cannot provide global insights about overall model behaviour."
        },
        {
          "description": "Requires discretisation of continuous features, which can lose important nuanced information and create arbitrary thresholds."
        },
        {
          "description": "May fail to find suitable anchor rules if precision requirements are too strict or if the prediction space is highly complex."
        },
        {
          "description": "Computationally expensive as it requires extensive sampling to validate rule precision, especially for high-dimensional data."
        }
      ],
      "resources": [
        {
          "title": "Anchors: High-Precision Model-Agnostic Explanations",
          "url": "https://homes.cs.washington.edu/~marcotcr/aaai18.pdf",
          "source_type": "technical_paper",
          "authors": [
            "Marco Tulio Ribeiro",
            "Sameer Singh",
            "Carlos Guestrin"
          ],
          "publication_date": "2018-01-01"
        },
        {
          "title": "marcotcr/anchor",
          "url": "https://github.com/marcotcr/anchor",
          "source_type": "software_package"
        },
        {
          "title": "alibi/alibi",
          "url": "https://github.com/SeldonIO/alibi",
          "source_type": "software_package"
        },
        {
          "title": "Interpretable Machine Learning - Anchors",
          "url": "https://christophm.github.io/interpretable-ml-book/anchors.html",
          "source_type": "documentation"
        }
      ],
      "complexity_rating": 3,
      "computational_cost_rating": 3,
      "related_techniques": [
        "shapley-additive-explanations",
        "integrated-gradients",
        "deeplift",
        "layer-wise-relevance-propagation",
        "local-interpretable-model-agnostic-explanations",
        "contrastive-explanation-method"
      ]
    },
    {
      "slug": "counterfactual-fairness-assessment",
      "name": "Counterfactual Fairness Assessment",
      "description": "Counterfactual Fairness Assessment evaluates whether a model's predictions would remain unchanged if an individual's protected attributes (race, gender, age) were different, whilst keeping all other causally legitimate factors constant. The technique requires constructing a causal graph that maps relationships between variables, then using do-calculus or structural causal models to simulate counterfactual scenarios. For example, it asks: 'Would this loan application still be approved if the applicant were a different race, holding constant their actual qualifications and economic circumstances?' This individual-level fairness criterion helps identify when decisions depend improperly on protected characteristics.",
      "assurance_goals": [
        "Fairness"
      ],
      "tags": [
        "applicable-models/agnostic",
        "assurance-goal-category/fairness",
        "data-requirements/sensitive-attributes",
        "data-type/any",
        "evidence-type/quantitative-metric",
        "expertise-needed/causal-inference",
        "expertise-needed/ml-engineering",
        "explanatory-scope/local",
        "fairness-approach/causal",
        "lifecycle-stage/model-development",
        "technique-type/algorithmic"
      ],
      "example_use_cases": [
        {
          "description": "Evaluating a hiring algorithm by testing whether qualified candidates would receive the same evaluation scores if their gender were different, whilst controlling for actual skills, experience, and education, revealing whether gender bias affects recruitment decisions.",
          "goal": "Fairness"
        },
        {
          "description": "Assessing a criminal sentencing model by examining whether defendants with identical criminal histories and case circumstances would receive the same sentence recommendations regardless of their race, identifying potential discriminatory patterns in judicial AI systems.",
          "goal": "Fairness"
        }
      ],
      "limitations": [
        {
          "description": "Requires explicit specification of causal relationships between variables, which involves subjective assumptions about what constitutes legitimate versus illegitimate causal pathways."
        },
        {
          "description": "May be mathematically impossible to satisfy simultaneously with other fairness criteria (like statistical parity), forcing practitioners to choose between competing fairness definitions."
        },
        {
          "description": "Implementation complexity is high, requiring sophisticated causal inference techniques and structural causal models that are difficult to construct and validate."
        },
        {
          "description": "Depends heavily on the quality and completeness of the causal graph, which may be incorrect or missing important confounding variables."
        }
      ],
      "resources": [
        {
          "title": "Counterfactual Fairness",
          "url": "https://proceedings.neurips.cc/paper/2017/file/a486cd07e4ac3d270571622f4f316ec5-Paper.pdf",
          "source_type": "technical_paper",
          "authors": [
            "Matt J. Kusner",
            "Joshua Loftus",
            "Chris Russell",
            "Ricardo Silva"
          ],
          "publication_date": "2017-12-04"
        },
        {
          "title": "fairlearn/fairlearn",
          "url": "https://github.com/fairlearn/fairlearn",
          "source_type": "software_package"
        },
        {
          "title": "Counterfactual Fairness in Text Classification through Robustness",
          "url": "http://arxiv.org/pdf/1809.10610v2",
          "source_type": "technical_paper",
          "authors": [
            "Sahaj Garg",
            "Vincent Perot",
            "Nicole Limtiaco",
            "Ankur Taly",
            "Ed H. Chi",
            "Alex Beutel"
          ],
          "publication_date": "2018-09-27"
        }
      ],
      "complexity_rating": 5,
      "computational_cost_rating": 3,
      "related_techniques": [
        "path-specific-counterfactual-fairness-assessment"
      ]
    },
    {
      "slug": "sensitivity-analysis-for-fairness",
      "name": "Sensitivity Analysis for Fairness",
      "description": "Sensitivity Analysis for Fairness systematically evaluates how model predictions change when sensitive attributes or their proxies are perturbed whilst holding other factors constant. The technique involves creating counterfactual instances by modifying potentially discriminatory features (race, gender, age) or their correlates (zip code, names, education institutions) and measuring the resulting prediction differences. This controlled perturbation approach quantifies the degree to which protected characteristics influence model decisions, helping detect both direct discrimination and indirect bias through proxy variables even when sensitive attributes are not explicitly used as model inputs.",
      "assurance_goals": [
        "Fairness"
      ],
      "tags": [
        "applicable-models/agnostic",
        "assurance-goal-category/fairness",
        "data-requirements/sensitive-attributes",
        "data-type/any",
        "evidence-type/quantitative-metric",
        "expertise-needed/statistics",
        "explanatory-scope/local",
        "fairness-approach/group",
        "lifecycle-stage/model-development",
        "technique-type/algorithmic"
      ],
      "example_use_cases": [
        {
          "description": "Testing whether a lending model's decisions change significantly when only the applicant's zip code (which may correlate with race) is altered, while keeping all other factors constant.",
          "goal": "Fairness"
        },
        {
          "description": "Evaluating a recruitment algorithm by systematically changing candidate names from stereotypically male to female names (whilst keeping qualifications identical) to measure whether gender bias affects hiring recommendations, revealing discrimination through name-based proxies.",
          "goal": "Fairness"
        },
        {
          "description": "Assessing a healthcare resource allocation model by varying patient zip codes across different socioeconomic areas to determine whether geographic proxies for race and income inappropriately influence treatment recommendations.",
          "goal": "Fairness"
        }
      ],
      "limitations": [
        {
          "description": "Requires domain expertise to identify relevant proxy variables for sensitive attributes, which may not be obvious or comprehensive."
        },
        {
          "description": "Computationally intensive for complex models when testing many feature combinations or perturbation ranges."
        },
        {
          "description": "Choice of perturbation ranges and comparison points involves subjective decisions that can significantly affect results and conclusions."
        },
        {
          "description": "May miss subtle or interaction-based forms of discrimination that only manifest under specific combinations of features."
        }
      ],
      "resources": [
        {
          "title": "The Fragility of Fairness: Causal Sensitivity Analysis for Fair Machine Learning",
          "url": "http://arxiv.org/pdf/2410.09600v2",
          "source_type": "technical_paper",
          "authors": [
            "Jake Fawkes",
            "Nic Fishman",
            "Mel Andrews",
            "Zachary C. Lipton"
          ],
          "publication_date": "2024-10-12"
        },
        {
          "title": "Fair SA: Sensitivity Analysis for Fairness in Face Recognition",
          "url": "http://arxiv.org/pdf/2202.03586v2",
          "source_type": "technical_paper",
          "authors": [
            "Aparna R. Joshi",
            "Xavier Suau",
            "Nivedha Sivakumar",
            "Luca Zappella",
            "Nicholas Apostoloff"
          ],
          "publication_date": "2022-02-08"
        },
        {
          "title": "fairlearn/fairlearn",
          "url": "https://github.com/fairlearn/fairlearn",
          "source_type": "software_package"
        },
        {
          "title": "Aequitas: Bias Audit Toolkit",
          "url": "https://github.com/dssg/aequitas",
          "source_type": "software_package"
        },
        {
          "title": "Fairness Through Sensitivity Analysis - Towards Data Science",
          "url": "https://towardsdatascience.com/fairness-through-sensitivity-analysis-3ea1b4d79e6c",
          "source_type": "tutorial"
        },
        {
          "title": "User Guide - Fairlearn documentation",
          "url": "https://fairlearn.org/v0.8.0/user_guide/assessment.html",
          "source_type": "documentation"
        }
      ],
      "complexity_rating": 3,
      "computational_cost_rating": 3,
      "related_techniques": [
        "fairness-gan",
        "attribute-removal-fairness-through-unawareness",
        "bayesian-fairness-regularization"
      ]
    },
    {
      "slug": "neuron-activation-analysis",
      "name": "Neuron Activation Analysis",
      "description": "Neuron activation analysis examines the firing patterns of individual neurons in neural networks by probing them with diverse inputs and analysing their activation responses. This technique helps understand what concepts, features, or patterns different neurons have learned to recognise, providing insights into the model's internal representations. For large language models, this can reveal neurons specialised for linguistic concepts, semantic categories, or even potentially harmful patterns, enabling targeted interventions and deeper model understanding.",
      "assurance_goals": [
        "Explainability",
        "Safety",
        "Fairness"
      ],
      "tags": [
        "applicable-models/neural-network",
        "applicable-models/llm",
        "applicable-models/transformer",
        "assurance-goal-category/explainability",
        "assurance-goal-category/safety",
        "assurance-goal-category/fairness",
        "data-requirements/access-to-model-internals",
        "data-type/text",
        "evidence-type/quantitative-metric",
        "evidence-type/visualisation",
        "explanatory-scope/local",
        "explanatory-scope/global",
        "expertise-needed/ml-engineering",
        "lifecycle-stage/model-development",
        "lifecycle-stage/testing",
        "lifecycle-stage/monitoring",
        "technique-type/algorithmic"
      ],
      "example_use_cases": [
        {
          "description": "Analysing GPT-based models to identify specific neurons that activate on toxic or harmful content, enabling targeted interventions to reduce model toxicity whilst preserving general language capabilities for safer AI deployment.",
          "goal": "Safety"
        },
        {
          "description": "Examining activation patterns in multilingual language models to detect neurons that exhibit systematic biases when processing text from different linguistic communities, revealing implicit representation inequalities that could affect downstream applications.",
          "goal": "Fairness"
        },
        {
          "description": "Investigating individual neurons in medical language models to understand which clinical concepts and medical knowledge representations drive diagnostic suggestions, enabling healthcare professionals to validate the model's medical reasoning pathways.",
          "goal": "Explainability"
        }
      ],
      "limitations": [
        {
          "description": "Many neurons exhibit polysemantic behaviour, representing multiple unrelated concepts simultaneously, making it difficult to assign clear interpretable meanings to individual neural units."
        },
        {
          "description": "Important model behaviours are often distributed across many neurons rather than localised in single units, requiring analysis of neural circuits and interactions that can be exponentially complex."
        },
        {
          "description": "Computational costs scale dramatically with modern large language models containing billions of parameters, making comprehensive neuron-by-neuron analysis prohibitively expensive for complete model understanding."
        },
        {
          "description": "Neuron activation patterns are highly context-dependent, with the same neuron potentially serving different roles based on surrounding input context, complicating consistent interpretation across diverse scenarios."
        },
        {
          "description": "Interpretation of activation patterns often relies on subjective human analysis without rigorous validation methods, potentially leading to confirmation bias or misattribution of neural functions."
        }
      ],
      "resources": [
        {
          "title": "jalammar/ecco",
          "url": "https://github.com/jalammar/ecco",
          "source_type": "software_package"
        },
        {
          "title": "NeuRel-Attack: Neuron Relearning for Safety Disalignment in Large Language Models",
          "url": "http://arxiv.org/pdf/2504.21053v1",
          "source_type": "technical_paper",
          "authors": [
            "Yi Zhou",
            "Wenpeng Xing",
            "Dezhang Kong",
            "Changting Lin",
            "Meng Han"
          ],
          "publication_date": "2025-04-29"
        },
        {
          "title": "On the Value of Labeled Data and Symbolic Methods for Hidden Neuron Activation Analysis",
          "url": "http://arxiv.org/pdf/2404.13567v1",
          "source_type": "technical_paper",
          "authors": [
            "Abhilekha Dalal",
            "Rushrukh Rayan",
            "Adrita Barua",
            "Eugene Y. Vasserman",
            "Md Kamruzzaman Sarker",
            "Pascal Hitzler"
          ],
          "publication_date": "2024-04-21"
        },
        {
          "title": "On the Value of Labeled Data and Symbolic Methods for Hidden Neuron\n  Activation Analysis",
          "url": "http://arxiv.org/abs/2404.13567",
          "source_type": "technical_paper",
          "authors": [
            "Barua, Adrita",
            "Dalal, Abhilekha",
            "Hitzler, Pascal",
            "Rayan, Rushrukh",
            "Sarker, Md Kamruzzaman",
            "Vasserman, Eugene Y."
          ],
          "publication_date": "2024-04-21"
        },
        {
          "title": "Ecco",
          "url": "https://ecco.readthedocs.io/",
          "source_type": "documentation"
        },
        {
          "title": "Tracing the Thoughts in Language Models",
          "url": "https://www.anthropic.com/news/tracing-thoughts-language-model",
          "source_type": "documentation"
        }
      ],
      "complexity_rating": 5,
      "computational_cost_rating": 4,
      "related_techniques": [
        "prototype-and-criticism-models",
        "concept-activation-vectors"
      ]
    },
    {
      "slug": "concept-activation-vectors",
      "name": "Concept Activation Vectors",
      "description": "Concept Activation Vectors (CAVs), also known as Testing with Concept Activation Vectors (TCAV), identify mathematical directions in neural network representation space that correspond to human-understandable concepts such as 'stripes', 'young', or 'medical equipment'. The technique works by finding linear directions that separate activations of concept examples from non-concept examples, then measuring how much these concept directions influence the model's predictions. This provides quantitative answers to questions like 'How much does the concept of youth affect this model's hiring decisions?' enabling systematic bias detection and model understanding.",
      "assurance_goals": [
        "Explainability",
        "Fairness",
        "Transparency"
      ],
      "tags": [
        "applicable-models/neural-network",
        "applicable-models/transformer",
        "applicable-models/cnn",
        "assurance-goal-category/explainability",
        "assurance-goal-category/fairness",
        "assurance-goal-category/transparency",
        "data-requirements/access-to-model-internals",
        "data-type/any",
        "evidence-type/quantitative-metric",
        "evidence-type/visualization",
        "explanatory-scope/local",
        "explanatory-scope/global",
        "expertise-needed/ml-engineering",
        "expertise-needed/domain-knowledge",
        "lifecycle-stage/model-development",
        "lifecycle-stage/system-deployment-and-use/auditing",
        "technique-type/algorithmic"
      ],
      "example_use_cases": [
        {
          "description": "Auditing a medical imaging model to verify it focuses on diagnostic features (like 'tumour characteristics') rather than irrelevant concepts (like 'scanner type' or 'patient positioning') when classifying chest X-rays, ensuring clinical decisions rely on medically relevant information.",
          "goal": "Explainability"
        },
        {
          "description": "Testing whether a hiring algorithm's resume screening decisions are influenced by concepts related to protected characteristics such as 'gender-associated names', 'prestigious universities', or 'employment gaps', enabling systematic bias detection and compliance verification.",
          "goal": "Fairness"
        },
        {
          "description": "Providing regulatory-compliant explanations for financial lending decisions by quantifying how concepts like 'debt-to-income ratio', 'employment stability', and 'credit history length' influence loan approval models, with precise sensitivity scores for audit documentation.",
          "goal": "Transparency"
        }
      ],
      "limitations": [
        {
          "description": "Requires clearly defined concept examples and non-concept examples, which can be challenging to obtain for abstract or subjective concepts."
        },
        {
          "description": "Assumes that meaningful concept directions exist as linear separable directions in the model's internal representation space, which may not hold for all concepts."
        },
        {
          "description": "Results depend heavily on which network layer is examined, as different layers capture different levels of abstraction and concept representation."
        },
        {
          "description": "Computational cost grows significantly with model size and number of concepts tested, though recent advances like FastCAV address this limitation."
        },
        {
          "description": "Interpretation requires domain expertise to define meaningful concepts and understand the significance of sensitivity scores in practical contexts."
        }
      ],
      "resources": [
        {
          "title": "FastCAV: Efficient Computation of Concept Activation Vectors for Explaining Deep Neural Networks",
          "url": "http://arxiv.org/pdf/2505.17883v1",
          "source_type": "technical_paper",
          "authors": [
            "Laines Schmalwasser",
            "Niklas Penzel",
            "Joachim Denzler",
            "Julia Niebling"
          ],
          "publication_date": "2025-05-23"
        },
        {
          "title": "Concept Distillation: Leveraging Human-Centered Explanations for Model Improvement",
          "url": "http://arxiv.org/pdf/2311.15303v1",
          "source_type": "technical_paper",
          "authors": [
            "Avani Gupta",
            "Saurabh Saini",
            "P J Narayanan"
          ],
          "publication_date": "2023-11-26"
        },
        {
          "title": "Post-Hoc Concept Disentanglement: From Correlated to Isolated Concept Representations",
          "url": "http://arxiv.org/pdf/2503.05522v1",
          "source_type": "technical_paper",
          "authors": [
            "Eren Erogullari",
            "Sebastian Lapuschkin",
            "Wojciech Samek",
            "Frederik Pahde"
          ],
          "publication_date": "2025-03-07"
        },
        {
          "title": "Concept Gradient: Concept-based Interpretation Without Linear Assumption",
          "url": "http://arxiv.org/pdf/2208.14966v2",
          "source_type": "technical_paper",
          "authors": [
            "Andrew Bai",
            "Chih-Kuan Yeh",
            "Pradeep Ravikumar",
            "Neil Y. C. Lin",
            "Cho-Jui Hsieh"
          ],
          "publication_date": "2022-08-31"
        },
        {
          "title": "SurroCBM: Concept Bottleneck Surrogate Models for Generative Post-hoc Explanation",
          "url": "http://arxiv.org/pdf/2310.07698v1",
          "source_type": "technical_paper",
          "authors": [
            "Bo Pan",
            "Zhenke Liu",
            "Yifei Zhang",
            "Liang Zhao"
          ],
          "publication_date": "2023-10-11"
        }
      ],
      "complexity_rating": 4,
      "computational_cost_rating": 3,
      "acronym": "CAVs",
      "related_techniques": [
        "prototype-and-criticism-models",
        "neuron-activation-analysis"
      ]
    },
    {
      "slug": "attention-visualisation-in-transformers",
      "name": "Attention Visualisation in Transformers",
      "description": "Attention Visualisation in Transformers analyses the multi-head self-attention mechanisms that enable transformers to process sequences by attending to different positions simultaneously. The technique visualises attention weights as heatmaps showing how strongly each token attends to every other token across different heads and layers. By examining these attention patterns, practitioners can understand how models like BERT, GPT, and T5 build contextual representations, identify which tokens influence predictions most strongly, and detect potential biases in how the model processes different types of input. This provides insights into positional encoding effects, head specialisation patterns, and the evolution of attention from local to global context across layers.",
      "assurance_goals": [
        "Explainability",
        "Fairness",
        "Transparency"
      ],
      "tags": [
        "applicable-models/transformer",
        "assurance-goal-category/explainability",
        "assurance-goal-category/explainability/feature-analysis",
        "assurance-goal-category/explainability/feature-analysis/importance-and-attribution",
        "assurance-goal-category/fairness",
        "assurance-goal-category/transparency",
        "data-requirements/access-to-model-internals",
        "data-type/text",
        "data-type/image",
        "evidence-type/visualization",
        "expertise-needed/ml-engineering",
        "explanatory-scope/local",
        "explanatory-scope/global",
        "lifecycle-stage/model-development",
        "lifecycle-stage/testing",
        "technique-type/algorithmic"
      ],
      "example_use_cases": [
        {
          "description": "Examining attention patterns in a medical language model processing clinical notes to verify it focuses on relevant symptoms and conditions rather than irrelevant demographic identifiers, revealing that certain attention heads specialise in medical terminology whilst others track syntactic relationships between diagnoses and treatments.",
          "goal": "Explainability"
        },
        {
          "description": "Auditing a sentiment analysis model for customer reviews by visualising how attention weights differ when processing reviews from different demographic groups, discovering that the model pays disproportionate attention to certain cultural expressions or colloquialisms that could lead to biased sentiment predictions.",
          "goal": "Fairness"
        },
        {
          "description": "Creating visual explanations for regulatory compliance in a financial document classification system, showing which specific words and phrases in loan applications or contracts triggered particular risk assessments, enabling auditors to verify that decisions are based on legitimate financial factors rather than discriminatory language patterns.",
          "goal": "Transparency"
        }
      ],
      "limitations": [
        {
          "description": "High attention weights do not necessarily indicate causal importance for predictions, as models may attend strongly to tokens that serve structural rather than semantic purposes."
        },
        {
          "description": "The sheer number of attention heads and layers in modern transformers creates visualisation overload, making it difficult to identify meaningful patterns without systematic analysis tools."
        },
        {
          "description": "Attention patterns can be misleading when models use residual connections and layer normalisation, as the final representation incorporates information beyond what attention weights suggest."
        },
        {
          "description": "Different transformer architectures (encoder-only, decoder-only, encoder-decoder) exhibit fundamentally different attention patterns, limiting the generalisability of insights across model types."
        },
        {
          "description": "The technique cannot explain the reasoning process within feed-forward layers or how attention patterns translate into specific predictions, providing only a partial view of model behaviour."
        }
      ],
      "resources": [
        {
          "title": "jessevig/bertviz",
          "url": "https://github.com/jessevig/bertviz",
          "source_type": "software_package",
          "description": "Interactive tool for visualising attention patterns in transformer language models including BERT, GPT-2, and T5"
        },
        {
          "title": "Attention is All You Need",
          "url": "https://arxiv.org/abs/1706.03762",
          "source_type": "technical_paper",
          "description": "Foundational paper introducing the transformer architecture and self-attention mechanism"
        },
        {
          "title": "Analyzing Multi-Head Self-Attention: Specialized Heads Do the Heavy Lifting, the Rest Can Be Pruned",
          "url": "https://arxiv.org/abs/1905.09418",
          "source_type": "technical_paper",
          "description": "Research showing how different attention heads specialise in distinct linguistic phenomena"
        },
        {
          "title": "What Does BERT Look At? An Analysis of BERT's Attention",
          "url": "https://arxiv.org/abs/1906.04341",
          "source_type": "technical_paper",
          "description": "Comprehensive analysis of attention patterns in BERT revealing syntactic and semantic specialisation"
        },
        {
          "title": "Transformer Explainability Beyond Attention Visualization",
          "url": "https://arxiv.org/abs/2012.09838",
          "source_type": "technical_paper",
          "description": "Methods for attribution beyond raw attention weights including relevancy propagation and gradient-based approaches"
        }
      ],
      "complexity_rating": 3,
      "computational_cost_rating": 2,
      "related_techniques": [
        "integrated-gradients",
        "layer-wise-relevance-propagation",
        "saliency-maps",
        "gradient-weighted-class-activation-mapping",
        "classical-attention-analysis-in-neural-networks",
        "contrastive-explanation-method"
      ]
    }
  ],
  "count": 20
}