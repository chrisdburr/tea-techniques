name: Dependency Updates

on:
  schedule:
    # Run weekly on Monday at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch: # Allow manual triggering

jobs:
  update-python-dependencies:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install pip-tools
      run: pip install pip-tools

    - name: Update Python dependencies
      run: |
        cd backend
        # Update requirements files
        pip-compile requirements/base.in --upgrade
        pip-compile requirements/development.in --upgrade
        pip-compile requirements/production.in --upgrade
        pip-compile requirements/test.in --upgrade

    - name: Create Pull Request for Python dependencies
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: "chore: update Python dependencies"
        title: "ðŸ”„ Update Python Dependencies"
        body: |
          ## Automated Python Dependency Update
          
          This PR updates Python dependencies to their latest compatible versions.
          
          ### Changes
          - Updated base dependencies
          - Updated development dependencies  
          - Updated production dependencies
          - Updated test dependencies
          
          ### Next Steps
          - [ ] Review the changes
          - [ ] Ensure all tests pass
          - [ ] Check for any breaking changes in updated packages
          
          **Note: This PR was created automatically by the dependency update workflow.**
        branch: chore/update-python-dependencies
        delete-branch: true
        labels: |
          dependencies
          python
          automated

  update-node-dependencies:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: "18"

    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: "10.6.5"

    - name: Update Node.js dependencies
      working-directory: frontend
      run: |
        # Update dependencies to latest compatible versions
        pnpm update --latest
        
        # Update devDependencies
        pnpm update --latest --dev

    - name: Create Pull Request for Node.js dependencies
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: "chore: update Node.js dependencies"
        title: "ðŸ”„ Update Node.js Dependencies"
        body: |
          ## Automated Node.js Dependency Update
          
          This PR updates Node.js dependencies to their latest compatible versions.
          
          ### Changes
          - Updated production dependencies
          - Updated development dependencies
          - Updated pnpm lockfile
          
          ### Next Steps
          - [ ] Review the changes
          - [ ] Ensure all tests pass
          - [ ] Check for any breaking changes in updated packages
          - [ ] Test the application locally
          
          **Note: This PR was created automatically by the dependency update workflow.**
        branch: chore/update-node-dependencies
        delete-branch: true
        labels: |
          dependencies
          nodejs
          automated

  security-audit:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: "18"

    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: "10.6.5"

    - name: Install Python dependencies
      run: |
        cd backend
        pip install -r requirements/development.txt
        pip install safety

    - name: Install Node.js dependencies
      working-directory: frontend
      run: pnpm install --frozen-lockfile

    - name: Python security audit
      run: |
        cd backend
        safety check -r requirements/production.txt --json --output safety-report.json || true
        safety check -r requirements/production.txt

    - name: Node.js security audit
      working-directory: frontend
      run: |
        pnpm audit --json > npm-audit.json || true
        pnpm audit

    - name: Upload security audit results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-audit-results
        path: |
          backend/safety-report.json
          frontend/npm-audit.json
        retention-days: 30

    - name: Create security issue if vulnerabilities found
      if: failure()
      uses: actions/github-script@v7
      with:
        script: |
          const title = 'ðŸš¨ Security Vulnerabilities Detected';
          const body = `
          ## Security Audit Report
          
          The automated security audit has detected potential vulnerabilities in the project dependencies.
          
          ### Action Required
          - [ ] Review the uploaded security audit results
          - [ ] Update vulnerable dependencies
          - [ ] Test the application after updates
          - [ ] Close this issue once vulnerabilities are resolved
          
          ### Artifacts
          Check the workflow run artifacts for detailed security reports:
          - Python: safety-report.json
          - Node.js: npm-audit.json
          
          **Note: This issue was created automatically by the security audit workflow.**
          `;
          
          await github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: title,
            body: body,
            labels: ['security', 'vulnerability', 'automated']
          });