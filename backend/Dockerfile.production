FROM python:3.12-slim AS builder

WORKDIR /app

# Install system dependencies for building
RUN apt-get update && apt-get install -y \
    build-essential \
    libpq-dev \
    && rm -rf /var/lib/apt/lists/*

# Install uv
RUN pip install uv

# Copy dependency files
COPY pyproject.toml uv.lock ./

# Install dependencies
RUN uv sync --frozen --no-dev --no-editable

FROM python:3.12-slim AS production

# Create non-root user
RUN groupadd -r tea && useradd -r -g tea tea

WORKDIR /app

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    libpq5 \
    postgresql-client \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Copy Python packages from builder
COPY --from=builder /usr/local/lib/python3.12/site-packages /usr/local/lib/python3.12/site-packages
COPY --from=builder /usr/local/bin /usr/local/bin

# Install additional production packages
RUN pip install gunicorn whitenoise psycopg[binary]

# Copy project files
COPY . .

# Create required directories
RUN mkdir -p /app/static /app/staticfiles /app/media && \
    chown -R tea:tea /app

# Copy and set permissions for scripts
COPY entrypoint.production.sh /app/entrypoint.sh
RUN chmod +x /app/entrypoint.sh && chown tea:tea /app/entrypoint.sh

# Set production settings module
ENV DJANGO_SETTINGS_MODULE=config.settings.production
ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:8000/api/techniques/ || exit 1

# Switch to non-root user
USER tea

EXPOSE 8000

CMD ["/app/entrypoint.sh"]
