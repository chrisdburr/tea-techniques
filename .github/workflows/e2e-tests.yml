name: E2E Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run E2E tests nightly at 2 AM UTC
    - cron: '0 2 * * *'

env:
  NODE_VERSION: "18"
  PNPM_VERSION: "10.6.5"

jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: ${{ env.PNPM_VERSION }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Start application stack
      run: |
        docker-compose -f docker-compose.test.yml up -d --build
        
    - name: Wait for services to be ready
      run: |
        echo "Waiting for backend..."
        timeout 120s bash -c 'until curl -f http://localhost:8000/api/; do sleep 5; done'
        echo "Waiting for frontend..."
        timeout 120s bash -c 'until curl -f http://localhost:3000; do sleep 5; done'

    - name: Setup test data
      run: |
        docker-compose -f docker-compose.test.yml exec -T backend python manage.py reset_and_import_techniques

    - name: Install frontend dependencies
      working-directory: frontend
      run: pnpm install --frozen-lockfile

    - name: Install Playwright
      working-directory: frontend
      run: npx playwright install --with-deps

    - name: Run Playwright E2E tests
      working-directory: frontend
      run: npx playwright test
      env:
        PLAYWRIGHT_BASE_URL: http://localhost:3000

    - name: Upload Playwright report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: frontend/test-results/
        retention-days: 30

    - name: Upload Playwright HTML report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-html-report
        path: frontend/playwright-report/
        retention-days: 30

    - name: Capture application logs on failure
      if: failure()
      run: |
        echo "=== Backend logs ==="
        docker-compose -f docker-compose.test.yml logs backend
        echo "=== Frontend logs ==="
        docker-compose -f docker-compose.test.yml logs frontend

    - name: Cleanup
      if: always()
      run: |
        docker-compose -f docker-compose.test.yml down -v

  performance-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Start application stack
      run: |
        docker-compose -f docker-compose.test.yml up -d --build
        
    - name: Wait for services to be ready
      run: |
        timeout 120s bash -c 'until curl -f http://localhost:8000/api/; do sleep 5; done'
        timeout 120s bash -c 'until curl -f http://localhost:3000; do sleep 5; done'

    - name: Setup test data
      run: |
        docker-compose -f docker-compose.test.yml exec -T backend python manage.py reset_and_import_techniques

    - name: Install Lighthouse CI
      run: npm install -g @lhci/cli

    - name: Run Lighthouse CI
      run: |
        lhci autorun
      env:
        LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

    - name: Upload Lighthouse results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: lighthouse-results
        path: .lighthouseci/
        retention-days: 30

    - name: Cleanup
      if: always()
      run: |
        docker-compose -f docker-compose.test.yml down -v