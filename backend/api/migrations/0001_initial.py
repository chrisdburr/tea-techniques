# Generated by Django 5.2.4 on 2025-07-12 12:35

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AssuranceGoal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField()),
            ],
            options={
                'verbose_name_plural': 'Assurance Goals',
                'db_table': 'assurance_goal',
            },
        ),
        migrations.CreateModel(
            name='ResourceType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('icon', models.CharField(blank=True, max_length=50)),
            ],
            options={
                'db_table': 'resource_type',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'db_table': 'tag',
            },
        ),
        migrations.CreateModel(
            name='Technique',
            fields=[
                ('slug', models.SlugField(max_length=100, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('acronym', models.CharField(blank=True, max_length=20, null=True)),
                ('description', models.TextField()),
                ('complexity_rating', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('computational_cost_rating', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('assurance_goals', models.ManyToManyField(related_name='techniques', to='api.assurancegoal')),
                ('related_techniques', models.ManyToManyField(blank=True, to='api.technique')),
                ('tags', models.ManyToManyField(blank=True, related_name='techniques', to='api.tag')),
            ],
            options={
                'db_table': 'technique',
            },
        ),
        migrations.CreateModel(
            name='TechniqueExampleUseCase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('assurance_goal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.assurancegoal')),
                ('technique', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='example_use_cases', to='api.technique')),
            ],
            options={
                'db_table': 'technique_example_use_case',
            },
        ),
        migrations.CreateModel(
            name='TechniqueLimitation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('technique', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='limitations', to='api.technique')),
            ],
            options={
                'db_table': 'technique_limitation',
            },
        ),
        migrations.CreateModel(
            name='TechniqueResource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('url', models.URLField()),
                ('description', models.TextField(blank=True)),
                ('authors', models.CharField(blank=True, max_length=500, null=True)),
                ('publication_date', models.DateField(blank=True, null=True)),
                ('source_type', models.CharField(blank=True, max_length=100, null=True)),
                ('resource_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.resourcetype')),
                ('technique', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resources', to='api.technique')),
            ],
            options={
                'db_table': 'technique_resource',
                'unique_together': {('technique', 'url')},
            },
        ),
    ]
