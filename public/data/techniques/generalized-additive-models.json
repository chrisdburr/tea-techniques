{
  "slug": "generalized-additive-models",
  "name": "Generalized Additive Models",
  "description": "An intrinsically interpretable modelling technique that extends linear models by allowing flexible, nonlinear relationships between individual features and the target whilst maintaining the additive structure that preserves transparency. Each feature's effect is modelled separately as a smooth function, visualised as a curve showing how the feature influences predictions across its range. GAMs achieve this through spline functions or other smoothing techniques that capture complex patterns in individual variables without interactions, making them particularly valuable for domains requiring both predictive accuracy and model interpretability.",
  "assurance_goals": [
    "Transparency",
    "Explainability",
    "Reliability"
  ],
  "tags": [
    "applicable-models/gam",
    "applicable-models/linear-model",
    "assurance-goal-category/transparency",
    "assurance-goal-category/explainability",
    "assurance-goal-category/explainability/feature-analysis",
    "assurance-goal-category/explainability/feature-analysis/importance-and-attribution",
    "assurance-goal-category/reliability",
    "data-requirements/labelled-data",
    "data-type/tabular",
    "evidence-type/quantitative-metric",
    "evidence-type/visualisation",
    "expertise-needed/statistics",
    "explanatory-scope/global",
    "lifecycle-stage/project-design",
    "lifecycle-stage/model-development",
    "technique-type/algorithmic"
  ],
  "example_use_cases": [
    {
      "description": "Predicting hospital readmission risk with a GAM that provides transparent, auditable risk assessments by showing how readmission probability varies nonlinearly with patient age, blood pressure, and medication adherence, enabling clinicians to understand and trust the model's reasoning for regulatory compliance.",
      "goal": "Transparency"
    },
    {
      "description": "Building a credit scoring model that explains loan decisions to applicants by visualising how income, credit history, and debt-to-income ratio individually affect approval likelihood, providing clear feature attributions that satisfy fair lending requirements and regulatory explainability mandates.",
      "goal": "Explainability"
    },
    {
      "description": "Developing an environmental monitoring system that reliably predicts air quality using GAMs to model the smooth, nonlinear relationships between weather variables, ensuring stable predictions across seasonal variations whilst maintaining interpretable relationships that environmental scientists can validate.",
      "goal": "Reliability"
    }
  ],
  "limitations": [
    {
      "description": "Cannot capture complex interactions between features unless explicitly modelled, limiting their ability to represent relationships where variables influence each other."
    },
    {
      "description": "Setup requires domain expertise to decide which features need nonlinear treatment and appropriate smoothing parameters, making model specification more challenging than linear models."
    },
    {
      "description": "Fitting process is computationally more expensive than linear models, particularly for large datasets with many features requiring smoothing."
    },
    {
      "description": "Risk of overfitting individual feature relationships if smoothing parameters are not properly regularised, potentially reducing generalisation performance."
    },
    {
      "description": "Interpretation complexity increases with the number of nonlinear features, as understanding multiple smooth curves simultaneously becomes cognitively demanding."
    }
  ],
  "resources": [
    {
      "title": "Generalized Additive Models",
      "url": "https://hastie.su.domains/Papers/gam.pdf",
      "source_type": "technical_paper",
      "authors": [
        "Trevor Hastie",
        "Robert Tibshirani"
      ],
      "publication_date": "1986-01-01"
    },
    {
      "title": "pyGAM: Generalized Additive Models in Python",
      "url": "https://github.com/dswah/pyGAM",
      "source_type": "software_package"
    },
    {
      "title": "mgcv: Mixed GAM Computation Vehicle with Automatic Smoothness Estimation",
      "url": "https://cran.r-project.org/web/packages/mgcv/index.html",
      "source_type": "software_package"
    },
    {
      "title": "A Tour of pyGAM â€” pyGAM documentation",
      "url": "https://pygam.readthedocs.io/en/latest/notebooks/tour_of_pygam.html",
      "source_type": "tutorial"
    }
  ],
  "complexity_rating": 3,
  "computational_cost_rating": 2,
  "acronym": "GAMs",
  "related_techniques": [
    "monotonicity-constraints",
    "intrinsically-interpretable-models"
  ]
}