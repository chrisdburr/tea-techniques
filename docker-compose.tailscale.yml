services:
    db:
        image: postgres:16
        env_file:
            - .env.tailscale
        environment:
            - POSTGRES_DB=${DB_NAME:-techniques}
            - POSTGRES_USER=${DB_USER:-postgres}
            - POSTGRES_PASSWORD=${DB_PASSWORD:-postgres}
        volumes:
            - postgres_data_prod:/var/lib/postgresql/data
        restart: unless-stopped
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U postgres"]
            interval: 10s
            timeout: 5s
            retries: 5
            start_period: 10s

    backend:
        build:
            context: ./backend
            dockerfile: Dockerfile
        env_file:
            - .env.tailscale
        restart: unless-stopped
        volumes:
            - ./backend/static:/app/static
            - ./backend/staticfiles:/app/staticfiles
        depends_on:
            db:
                condition: service_healthy
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:8000/api/health/"]
            interval: 30s
            timeout: 10s
            retries: 5
            start_period: 30s

    frontend:
        build:
            context: ./frontend
            dockerfile: Dockerfile
            args:
                - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-/api}
                - NEXT_PUBLIC_SWAGGER_URL=${NEXT_PUBLIC_SWAGGER_URL:-/swagger/}
        env_file:
            - .env.tailscale
        restart: unless-stopped
        depends_on:
            - backend
        healthcheck:
            test: ["CMD", "curl", "--fail", "http://localhost:3000"]
            interval: 30s
            timeout: 10s
            retries: 5
            start_period: 30s

    nginx:
        build:
            context: ./nginx
            dockerfile: Dockerfile
        restart: unless-stopped
        volumes:
            - ./nginx/tea-techniques.conf:/etc/nginx/conf.d/tea-techniques.conf:ro
            - nginx_logs_prod:/var/log/nginx
        command: /bin/sh -c "rm -f /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
        depends_on:
            - frontend
            - backend
        ports:
            - "80:80"
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost/health"]
            interval: 30s
            timeout: 10s
            retries: 5
            start_period: 20s

volumes:
    postgres_data_prod:
    nginx_logs_prod:
